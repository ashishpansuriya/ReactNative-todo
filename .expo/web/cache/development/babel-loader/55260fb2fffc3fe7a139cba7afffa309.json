{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar Toggle = function (_React$Component) {\n  _inherits(Toggle, _React$Component);\n\n  var _super = _createSuper(Toggle);\n\n  function Toggle(props) {\n    var _this;\n\n    _classCallCheck(this, Toggle);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isToggleOn: true\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Toggle, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.setState(function (prevState) {\n        return {\n          isToggleOn: !prevState.isToggleOn\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"button\", {\n        onClick: this.handleClick\n      }, this.state.isToggleOn ? 'ON' : 'OFF');\n    }\n  }]);\n\n  return Toggle;\n}(React.Component);\n\nReactDOM.render(React.createElement(Toggle, null), document.getElementById('root'));","map":{"version":3,"sources":["E:/Projects/OneMoreProject/App.js"],"names":["React","Toggle","props","state","isToggleOn","handleClick","bind","setState","prevState","Component","ReactDOM","render","document","getElementById"],"mappings":";;;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;IAIMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAb;AAGA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AALiB;AAMlB;;;;WAED,uBAAc;AACZ,WAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AAC1BJ,UAAAA,UAAU,EAAE,CAACI,SAAS,CAACJ;AADG,SAAL;AAAA,OAAvB;AAGD;;;WAED,kBAAS;AACP,aACE;AAAQ,QAAA,OAAO,EAAE,KAAKC;AAAtB,SACG,KAAKF,KAAL,CAAWC,UAAX,GAAwB,IAAxB,GAA+B,KADlC,CADF;AAKD;;;;EArBkBJ,KAAK,CAACS,S;;AAwB3BC,QAAQ,CAACC,MAAT,CACE,oBAAC,MAAD,OADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["\nimport React from 'react';\nimport { Alert, Button,  StyleSheet, View } from 'react-native';\n\n\nclass Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {isToggleOn: true};\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn\n    }));\n  }\n\n  render() {\n    return (\n      <button onClick={this.handleClick}>\n        {this.state.isToggleOn ? 'ON' : 'OFF'}\n      </button>\n    );\n  }\n}\n\nReactDOM.render(\n  <Toggle />,\n  document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}