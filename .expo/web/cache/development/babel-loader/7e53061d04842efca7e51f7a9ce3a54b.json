{"ast":null,"code":"import React from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar Separator = function Separator() {\n  return React.createElement(View, {\n    style: styles.separator\n  });\n};\n\nvar App = function App() {\n  return React.createElement(SafeAreaView, {\n    style: styles.container\n  }, React.createElement(View, null, React.createElement(Text, {\n    style: styles.title\n  }, \"The title and onPress handler are required. It is recommended to set accessibilityLabel to help make your app usable by everyone.\"), React.createElement(Button, {\n    title: \"Press me\",\n    onPress: function onPress() {\n      return Alert.alert('Simple Button pressed');\n    }\n  })), React.createElement(Separator, null), React.createElement(View, null, React.createElement(Text, {\n    style: styles.title\n  }, \"Adjust the color in a way that looks standard on each platform. On  iOS, the color prop controls the color of the text. On Android, the color adjusts the background color of the button.\"), React.createElement(Button, {\n    title: \"Press me\",\n    color: \"#f194ff\",\n    onPress: function onPress() {\n      return Alert.alert('Button with adjusted color pressed');\n    }\n  })), React.createElement(Separator, null), React.createElement(View, null, React.createElement(Text, {\n    style: styles.title\n  }, \"All interaction for the component are disabled.\"), React.createElement(Button, {\n    title: \"Press me\",\n    disabled: true,\n    onPress: function onPress() {\n      return Alert.alert('Cannot press this one');\n    }\n  })), React.createElement(Separator, null), React.createElement(View, null, React.createElement(Text, {\n    style: styles.title\n  }, \"This layout strategy lets the title define the width of the button.\"), React.createElement(View, {\n    style: styles.fixToText\n  }, React.createElement(Button, {\n    title: \"Left button\",\n    onPress: function onPress() {\n      return Alert.alert('Left button pressed');\n    }\n  }), React.createElement(Button, {\n    title: \"Right button\",\n    onPress: function onPress() {\n      return Alert.alert('Right button pressed');\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    marginHorizontal: 16\n  },\n  title: {\n    textAlign: 'center',\n    marginVertical: 8\n  },\n  fixToText: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  separator: {\n    marginVertical: 8,\n    borderBottomColor: '#737373',\n    borderBottomWidth: StyleSheet.hairlineWidth\n  }\n});\nexport default App;","map":{"version":3,"sources":["E:/Projects/OneMoreProject/App.js"],"names":["React","Separator","styles","separator","App","container","title","Alert","alert","fixToText","StyleSheet","create","flex","justifyContent","marginHorizontal","textAlign","marginVertical","flexDirection","borderBottomColor","borderBottomWidth","hairlineWidth"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAIA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAChB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,IADgB;AAAA,CAAlB;;AAIA,IAAMC,GAAG,GAAG,SAANA,GAAM;AAAA,SACV,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEF,MAAM,CAACG;AAA5B,KACE,oBAAC,IAAD,QACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI;AAApB,yIADF,EAIE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMC,KAAK,CAACC,KAAN,CAAY,uBAAZ,CAAN;AAAA;AAFX,IAJF,CADF,EAUE,oBAAC,SAAD,OAVF,EAWE,oBAAC,IAAD,QACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACI;AAApB,iMADF,EAIE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMC,KAAK,CAACC,KAAN,CAAY,oCAAZ,CAAN;AAAA;AAHX,IAJF,CAXF,EAqBE,oBAAC,SAAD,OArBF,EAsBE,oBAAC,IAAD,QACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACI;AAApB,uDADF,EAIE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMC,KAAK,CAACC,KAAN,CAAY,uBAAZ,CAAN;AAAA;AAHX,IAJF,CAtBF,EAgCE,oBAAC,SAAD,OAhCF,EAiCE,oBAAC,IAAD,QACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACI;AAApB,2EADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACO;AAApB,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMF,KAAK,CAACC,KAAN,CAAY,qBAAZ,CAAN;AAAA;AAFX,IADF,EAKE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,cADR;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMD,KAAK,CAACC,KAAN,CAAY,sBAAZ,CAAN;AAAA;AAFX,IALF,CAJF,CAjCF,CADU;AAAA,CAAZ;;AAoDA,IAAMN,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,gBAAgB,EAAE;AAHT,GADoB;AAM/BR,EAAAA,KAAK,EAAE;AACLS,IAAAA,SAAS,EAAE,QADN;AAELC,IAAAA,cAAc,EAAE;AAFX,GANwB;AAU/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,aAAa,EAAE,KADN;AAETJ,IAAAA,cAAc,EAAE;AAFP,GAVoB;AAc/BV,EAAAA,SAAS,EAAE;AACTa,IAAAA,cAAc,EAAE,CADP;AAETE,IAAAA,iBAAiB,EAAE,SAFV;AAGTC,IAAAA,iBAAiB,EAAET,UAAU,CAACU;AAHrB;AAdoB,CAAlB,CAAf;AAqBA,eAAehB,GAAf","sourcesContent":["\nimport React from 'react';\nimport { Alert, Button,  StyleSheet, View } from 'react-native';\n\n\nconst Separator = () => (\n  <View style={styles.separator} />\n);\n\nconst App = () => (\n  <SafeAreaView style={styles.container}>\n    <View>\n      <Text style={styles.title}>\n        The title and onPress handler are required. It is recommended to set accessibilityLabel to help make your app usable by everyone.\n      </Text>\n      <Button\n        title=\"Press me\"\n        onPress={() => Alert.alert('Simple Button pressed')}\n      />\n    </View>\n    <Separator />\n    <View>\n      <Text style={styles.title}>\n        Adjust the color in a way that looks standard on each platform. On  iOS, the color prop controls the color of the text. On Android, the color adjusts the background color of the button.\n      </Text>\n      <Button\n        title=\"Press me\"\n        color=\"#f194ff\"\n        onPress={() => Alert.alert('Button with adjusted color pressed')}\n      />\n    </View>\n    <Separator />\n    <View>\n      <Text style={styles.title}>\n        All interaction for the component are disabled.\n      </Text>\n      <Button\n        title=\"Press me\"\n        disabled\n        onPress={() => Alert.alert('Cannot press this one')}\n      />\n    </View>\n    <Separator />\n    <View>\n      <Text style={styles.title}>\n        This layout strategy lets the title define the width of the button.\n      </Text>\n      <View style={styles.fixToText}>\n        <Button\n          title=\"Left button\"\n          onPress={() => Alert.alert('Left button pressed')}\n        />\n        <Button\n          title=\"Right button\"\n          onPress={() => Alert.alert('Right button pressed')}\n        />\n      </View>\n    </View>\n  </SafeAreaView>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    marginHorizontal: 16,\n  },\n  title: {\n    textAlign: 'center',\n    marginVertical: 8,\n  },\n  fixToText: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  separator: {\n    marginVertical: 8,\n    borderBottomColor: '#737373',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n  },\n});\n\nexport default App;"]},"metadata":{},"sourceType":"module"}